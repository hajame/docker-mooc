I got a little carried away, so I did two!


1. ml-kurkkumopo_frontend  1.11GB  -> 99.9MB
---------------------------------------------
# Original 
# 1.11GB

FROM node:12.16.2
WORKDIR /usr/src/app
COPY . .
RUN npm ci
RUN npm run build
RUN npm install -g serve
EXPOSE 3000
CMD ["serve", "-s", "-l", "3000", "build"]

---

# Optimized, multi-stage, non-root user runs server
# 99.9MB

FROM node:12-alpine as stage
WORKDIR /usr/src/app
COPY . .
RUN npm ci && npm run build


FROM node:12-alpine
COPY --from=stage /usr/src/app/build /usr/src/app/build
WORKDIR /usr/src/app
RUN npm install -g serve && adduser -D appuser
USER appuser
EXPOSE 3000
CMD ["serve", "-s", "-l", "3000", "build"]



2. spring-example-project 
-------------------------

#   Original  
#   611MB

FROM openjdk:8
WORKDIR /user/src/app
EXPOSE 8080
COPY . .
RUN ./mvnw package
CMD java -jar ./target/docker-example-1.1.3.jar

---

#   Optimized, multi-stage, non-priviledged user
#   141MB

FROM openjdk:8-alpine as stage
WORKDIR /user/src/app
COPY . .
RUN ./mvnw package

FROM openjdk:8-alpine
COPY --from=stage /user/src/app/target/docker-example-1.1.3.jar /user/src/app/target/docker-example-1.1.3.jar
EXPOSE 8080
WORKDIR /user/src/app
RUN chmod u+x ./target/docker-example-1.1.3.jar && adduser -D appuser
USER appuser
CMD java -jar ./target/docker-example-1.1.3.jar